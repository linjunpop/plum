<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | Jun.Blog]]></title>
  <link href="http://plum.iodot.org/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://plum.iodot.org/"/>
  <updated>2012-03-19T10:32:50+08:00</updated>
  <id>http://plum.iodot.org/</id>
  <author>
    <name><![CDATA[Jun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Use Factory.stub to speedup Rspec test]]></title>
    <link href="http://plum.iodot.org/blog/2012/03/09/use-factory-dot-stub-to-speedup-rspec-test/"/>
    <updated>2012-03-09T23:05:00+08:00</updated>
    <id>http://plum.iodot.org/blog/2012/03/09/use-factory-dot-stub-to-speedup-rspec-test</id>
    <content type="html"><![CDATA[<p>In one of my company's recent project, the spec test become very slow.
After a research on that problem, I find a solution is to stub the
associated model in the model test.</p>

<p>Here is an example:</p>

<p>The <code>app/models/call_sheet.rb</code>:</p>

<p>```
require 'spec_helper'</p>

<p>describe CallSheet do</p>

<p>  let(:call_sheet) { Factory(:call_sheet) }
  subject { call_sheet }</p>

<p>  describe 'associations' do</p>

<pre><code>it { should belong_to(:draft) }
it { should belong_to(:category) }
it { should belong_to(:stage) }
</code></pre>

<p>  end
end
```</p>

<p>Here is the <code>spec/support/factories/call_sheet.rb</code> factory:</p>

<p>```
FactoryGirl.define do
  factory :call_sheet do</p>

<pre><code>company_name "the company"
address "the address"
association :draft
association :stage
association :category
</code></pre>

<p>  end
end
```</p>

<p>It's associate with <code>draft</code>, <code>stage</code> and <code>category</code>.</p>

<p>Now, run the spec test in my machine. Here's the result:</p>

<p>```
Top 3 slowest examples:
  CallSheet associations</p>

<pre><code>8.33 seconds ./spec/models/call_sheet_spec.rb:14
</code></pre>

<p>  CallSheet associations</p>

<pre><code>7.42 seconds ./spec/models/call_sheet_spec.rb:16
</code></pre>

<p>  CallSheet associations</p>

<pre><code>6.76 seconds ./spec/models/call_sheet_spec.rb:15
</code></pre>

<p>Finished in 22.51 seconds
```</p>

<p>It's very slow, because the <code>Draft</code>, <code>Stage</code>, <code>Category</code> is associate with other models too.
We should not care about that in the <code>CallSheet</code> model's rspec test.</p>

<p>So, I Changed <code>spec/models/call_sheet_spec.rb</code> to</p>

<p>```
require 'spec_helper'</p>

<p>describe CallSheet do</p>

<p>  let(:project) { Factory.stub(:project) }
  let(:draft) { Factory.stub(:draft) }
  let(:stage) { Factory.stub(:stage) }
  let(:category) { Factory.stub(:category) }
  let(:call_sheet) { Factory(:call_sheet, draft: draft, stage: stage, category: category) }
  subject { call_sheet }</p>

<p>  describe 'associations' do</p>

<pre><code>it { should belong_to(:draft) }
it { should belong_to(:category) }
it { should belong_to(:stage) }
</code></pre>

<p>  end
end
```</p>

<p>The result:</p>

<p>```
Top 3 slowest examples:
  CallSheet associations</p>

<pre><code>0.30077 seconds ./spec/models/call_sheet_spec.rb:13
</code></pre>

<p>  CallSheet associations</p>

<pre><code>0.0172 seconds ./spec/models/call_sheet_spec.rb:15
</code></pre>

<p>  CallSheet associations</p>

<pre><code>0.01644 seconds ./spec/models/call_sheet_spec.rb:14
</code></pre>

<p>Finished in 0.33607 seconds
```</p>

<p>Super fast now.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Switch to Vim]]></title>
    <link href="http://plum.iodot.org/blog/2012/02/27/switch-to-vim/"/>
    <updated>2012-02-27T20:44:00+08:00</updated>
    <id>http://plum.iodot.org/blog/2012/02/27/switch-to-vim</id>
    <content type="html"><![CDATA[<p>After I became a textmate user for about six months. It's great, but not for me. So I switch back to my favorite Vim.</p>

<p>This time, I use <a href="https://github.com/carlhuda/janus">Janus</a> to get rid
of configuration mess.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Testing CoffeeScript on Rails 3.1]]></title>
    <link href="http://plum.iodot.org/blog/2011/11/06/testing-coffeescript-on-rails-3-dot-1/"/>
    <updated>2011-11-06T10:11:00+08:00</updated>
    <id>http://plum.iodot.org/blog/2011/11/06/testing-coffeescript-on-rails-3-dot-1</id>
    <content type="html"><![CDATA[<h2><code>Gemfile</code></h2>

<hr />

<p>``` ruby
group :development, :test do</p>

<pre><code>gem 'jasminerice'
gem 'guard'
gem 'guard-rspec'
gem 'guard-jasmine'
# for mac
gem 'rb-fsevent', :require =&gt; false
gem 'growl_notify', :require =&gt; false # or gem 'growl'
# for linux
gem 'rb-inotify', :require =&gt; false
gem 'libnotify', :require =&gt; false
</code></pre>

<p>end
```</p>

<h2>Init</h2>

<hr />

<p>Add guard definition to your <code>Guardfile</code> by running this command:</p>

<p><code>
$ guard init jasmine
</code></p>

<p>and add a route for the Jasmine Test Runner to <code>config/routes.rb</code>:</p>

<p><code>ruby
if ["development", "test"].include? Rails.env
  mount Jasminerice::Engine =&gt; "/jasmine"
end
</code></p>

<p>Next you create the directory <code>spec/javascripts</code> where your CoffeeScript tests go into. You define the Rails 3.1 asset pipeline manifest in <code>spec/javascripts/spec.js.coffee</code>:</p>

<p>``` coffeescript</p>

<h1>=require_tree ./</h1>

<p>```</p>

<h2>Install <code>phantomjs</code> (headless WebKit with JavaScript API)</h2>

<hr />

<p>With <code>Homebrew</code> on Mac OS X and install it with:</p>

<p><code>bash
$ brew install phantomjs
</code></p>

<p>for Ubuntu, you can install it with apt:</p>

<p><code>bash
$ sudo add-apt-repository ppa:jerome-etienne/neoip
$ sudo apt-get update
$ sudo apt-get install phantomjs
</code></p>

<h2>Run the test</h2>

<hr />

<p>run the following command on your terminal, and you will see the result.</p>

<p><code>bash
$ guard
</code></p>

<h2>refs</h2>

<hr />

<p><a href="https://github.com/netzpirat/guard-jasmine">https://github.com/netzpirat/guard-jasmine</a></p>

<p><a href="https://github.com/bradphelan/jasminerice">https://github.com/bradphelan/jasminerice</a></p>

<p><a href="http://code.google.com/p/phantomjs/">http://code.google.com/p/phantomjs/</a></p>

<p><a href="https://github.com/guard/guard">https://github.com/guard/guard</a></p>
]]></content>
  </entry>
  
</feed>
